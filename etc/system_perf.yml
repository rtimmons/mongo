##
## System Performance a/k/a DSI tests
##

stepback: false
command_type: system

post:
    # Do cluster teardown first to ensure runtime is below Evergreen's post timeout. Other post tasks
    # will not have been run if the timeout is exceeded.
    - command: shell.exec
      params:
        working_dir: ${workdir}/run
        script: ${workdir}/src/dsi/run-dsi post-run

    # Upload Artifacts
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_files_include_filter_prefix: run/build
        local_files_include_filter:
        - Artifacts/*.tar.gz
        remote_file: ${task_id}/${execution}/${build_variant}
        bucket: mciuploads
        permissions: public-read
        content_type: application/x-gzip
        display_name: DSI Artifacts -
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_files_include_filter_prefix: run/build
        local_files_include_filter:
        - Reports/LegacyPerf/*.json
        - Reports/EvergreenTestResults/*.json
        remote_file: ${task_id}/${execution}/${build_variant}
        bucket: mciuploads
        permissions: public-read
        content_type: text/plain
        display_name: DSI Reports -


    # Attach test (workload) results
    - command: attach.results
      params:
        file_location: ${workdir}/run/build/Reports/EvergreenTestResults/EvergreenTestResults.json
    - command: json.send
      params:
         name: perf
         file: ${workdir}/run/build/Reports/LegacyPerf/LegacyPerf.json

    # Scons prune
    - command: shell.exec
      params:
        working_dir: src/mongo
        # removes files from the (local) scons cache when it's over a
        # threshold, to the $prune_ratio percentage. Ideally override
        # these default values in the distro config in evergreen.
        script: |
          if [ -d "${scons_cache_path}" ]; then
              /opt/mongodbtoolchain/v3/bin/python3 buildscripts/scons_cache_prune.py --cache-dir ${scons_cache_path} --cache-size ${scons_cache_size|200} --prune-ratio ${scons_prune_ratio|0.8}
          fi

functions:
  f_git_get_project: &git_get_project
    command: git.get_project
    params:
      directory: src/mongo
      revisions:  # for each module include revision as <module_name> : ${<module_name>_rev}
        dsi: ${dsi_rev}
        enterprise: ${enterprise_rev}
        linkbench: ${linkbench_rev}
        genny: ${genny_rev}
        workloads: ${workloads_rev}
        wtdevelop: ${wtdevelop_rev}
        mongo-tools: ${mongo-tools_rev}

  f_compile_mongodb:
    # We create a virtual environment with the Python dependencies for compiling the server
    # installed.
    - command: shell.exec
      params:
        working_dir: src/mongo
        script: |
          set -o errexit

          /opt/mongodbtoolchain/v3/bin/virtualenv --python /opt/mongodbtoolchain/v3/bin/python3 "${workdir}/run/venv3"
          /opt/mongodbtoolchain/v3/bin/virtualenv --python /opt/mongodbtoolchain/v3/bin/python2 "${workdir}/run/venv2"
          source "${workdir}/run/venv3/bin/activate"

          python -m pip install -r ${workdir}/src/mongo/etc/pip/compile-requirements.txt

    - command: shell.exec
      params:
        working_dir: src/mongo
        script: |
          set -o errexit

          mkdir -p mongodb/bin

          # We get the raw version string (r1.2.3-45-gabcdef) from git
          MONGO_VERSION=$(git describe --abbrev=7)

          # If we're going to compile the upstream wtdevelop repository for wiredtiger, add
          # that githash to version string.
          if [ "${compile-variant|}" = "-wtdevelop" ]; then
            WT_VERSION=$(cd src/third_party/wtdevelop; git describe --abbrev=7 | cut -c 9-)
            MONGO_VERSION="$MONGO_VERSION-wtdevelop-$WT_VERSION"
          fi
          # If this is a patch build, we add the patch version id to the version string so we know
          # this build was a patch, and which evergreen task it came from
          if [ "${is_patch|false}" = "true" ]; then
            MONGO_VERSION="$MONGO_VERSION-patch-${version_id}"
          fi

          # This script converts the generated version string into a sanitized version string for
          # use by scons and uploading artifacts as well as information about for the scons cache.
          source "${workdir}/run/venv3/bin/activate"
          MONGO_VERSION=$MONGO_VERSION USE_SCONS_CACHE=${use_scons_cache|false} python buildscripts/generate_compile_expansions.py --out ${workdir}/src/mongo/compile_expansions.yml
    # Then we load the generated version data into the agent so we can use it in task definitions
    - command: expansions.update
      params:
        file: src/mongo/compile_expansions.yml

    - command: shell.exec
      params:
        working_dir: ${workdir}/src/mongo/mongo-tools/src/github.com/mongodb/mongo-tools
        script: |
          set -o verbose
          set -o errexit
          # make sure newlines in the scripts are handled correctly by windows
          if [ "Windows_NT" = "$OS" ]; then
            set -o igncr
          fi;
          # set_goenv provides set_goenv(), print_ldflags() and print_tags() used below
          . ./set_goenv.sh
          GOROOT="" set_goenv || exit
          go version
          build_tools="bsondump mongostat mongofiles mongoexport mongoimport mongorestore mongodump mongotop"
          if [ "${build_mongoreplay}" = "true" ]; then
              build_tools="$build_tools mongoreplay"
          fi
          for i in $build_tools; do
              go build -ldflags "$(print_ldflags)" ${args} -tags "$(print_tags ${tooltags})" -o "../../../../../mongodb/bin/$i${exe|}" $i/main/$i.go
              "../../../../../mongodb/bin/$i${exe|}" --version
          done

    - command: shell.exec
      params:
        working_dir: src/mongo
        script: |
          set -o errexit
          set -o verbose
          source "${workdir}/run/venv3/bin/activate"
          python ./buildscripts/scons.py ${compile_flags|} ${scons_cache_args|} --install-mode=hygienic install-core MONGO_VERSION=${version} DESTDIR=$(pwd)/mongodb
          mkdir -p mongodb/jstests/hooks
          if [ -d jstests/hooks ]
          then
            echo "Fetching JS test DB correctness checks from directory jstests"
            cp -a jstests/* mongodb/jstests

            echo "Now adding our own special run_validate_collections.js wrapper"
            mv mongodb/jstests/hooks/run_validate_collections.js mongodb/jstests/hooks/run_validate_collections.actual.js

            cat << EOF > mongodb/jstests/hooks/run_validate_collections.js
            print("NOTE: run_validate_collections.js will skip the oplog!");
            TestData = { skipValidationNamespaces: ['local.oplog.rs'] };
            load('jstests/hooks/run_validate_collections.actual.js');
          EOF
          fi
          mkdir -p "${workdir}/run/build/Artifacts"
          ls mongodb
          tar czf ${workdir}/run/build/Artifacts/mongo.tar.gz mongodb

  f_use_WiredTiger_develop:
    command: shell.exec
    params:
      working_dir: src/mongo
      script: |
        set -o errexit
        set -o verbose
        if [ "${compile-variant|}" = "-wtdevelop" ]; then
          cd src/third_party
          for wtdir in dist examples ext lang src test tools ; do
            rm -rf wiredtiger/$wtdir
            mv wtdevelop/$wtdir wiredtiger/
          done
        fi

  f_run_dsi_workload:
    # Prepare Environment
    - command: shell.exec
      params:
        script: |
          rm -rf ./*
          mkdir src
          mkdir run
    - command: manifest.load
    - *git_get_project
    - command: expansions.write
      params:
        file: ${workdir}/expansions.yml
    - command: shell.exec
      params:
        working_dir: ${workdir}/run
        script: ${workdir}/dsi/run-dsi setup
    # Run Test
    - command: shell.exec
      type: test
      params:
        working_dir: ${workdir}/run
        script: ${workdir}/dsi/run-dsi test

#######################################
#               Tasks                 #
#######################################

tasks:
- name: compile
  commands:
  - command: manifest.load
  - func: f_git_get_project
  - func: f_use_WiredTiger_develop # noop if ${compile-variant|} is not "-wtdevelop"
  - func: f_compile_mongodb

- name: linkbench
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: linkbench

- name: tpcc
  priority: 5
  commands:
    - func: f_run_dsi_workload
      vars:
        test_control: tpcc

- name: industry_benchmarks
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: ycsb

- name: ycsb_60GB
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: ycsb-60GB

- name: industry_benchmarks_secondary_reads
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: ycsb-secondary-reads

- name: industry_benchmarks_wmajority
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: ycsb-wmajority

- name: crud_workloads
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: crud_workloads

- name: crud_workloads_majority
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: crud_workloads_majority

- name: cursor_manager
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: cursor_manager

- name: mixed_workloads
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: mixed_workloads

- name: misc_workloads
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: misc_workloads

- name: map_reduce_workloads
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: map_reduce_workloads

- name: smoke_test
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: short

- name: genny_canaries
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: genny_canaries

- name: retryable_writes_workloads
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: retryable_writes


- name: snapshot_reads
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: snapshot_reads

- name: secondary_reads
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: snapshot_reads

- name: bestbuy_agg
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: bestbuy_agg

- name: bestbuy_agg_merge_same_db
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: bestbuy_agg_merge_same_db


- name: bestbuy_agg_merge_different_db
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: bestbuy_agg_merge_different_db

- name: bestbuy_agg_merge_target_hashed
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: bestbuy_agg_merge_target_hashed

- name: bestbuy_agg_merge_wordcount
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: bestbuy_agg_merge_wordcount

- name: bestbuy_query
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: bestbuy_query

- name: non_sharded_workloads
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: non_sharded

- name: mongos_workloads
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: mongos

- name: mongos_large_catalog_workloads
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: mongos_large_catalog

- name: move_chunk_workloads
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: move_chunk

- name: move_chunk_waiting_workloads
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: move_chunk_waiting

- name: refine_shard_key_transaction_stress
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: refine_shard_key_transaction_stress

- name: secondary_performance
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     # Unfortunately the dash/underscore style is different for mongodb_setup and test_control
     test_control: secondary_performance
     mongodb_setup: secondary-performance

- name: initialsync
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: initialsync

- name: initialsync-logkeeper-short
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: initialsync-logkeeper
     mongodb_setup: initialsync-logkeeper-short
     dataset: "https://s3-us-west-2.amazonaws.com/dsi-donot-remove/InitialSyncLogKeeper/logkeeper-slice-data-mongodb-4.4.tgz"

- name: initialsync-logkeeper
  priority: 5
  exec_timeout_secs: 216000 # 2.5 days
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: initialsync-logkeeper

- name: initialsync-large
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: initialsync-large

- name: change_streams_throughput
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: change_streams_throughput

- name: change_streams_latency
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: change_streams_latency

- name: change_streams_multi_mongos
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: change_streams_multi_mongos

- name: sb_large_scale
  priority: 5
  exec_timeout_secs: 43200 # 12 hours
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: sb_large_scale
     additional_tfvars: "tags: {expire-on-delta: 12}"

- name: sb_timeseries
  priority: 5
  commands:
  - func: f_run_dsi_workload
    vars:
     test_control: sb_timeseries

# Genny

- name: genny_generate_all_tasks
  priority: 5
  commands:
  - func: f_git_get_project
  - command: shell.exec
    params:
      working_dir: ${workdir}/run
      script: ${workdir}/src/genny/run-genny all-tasks
  - command: generate.tasks
    params:
      files:
        - ${workdir}/run/build/Tasks/Tasks.json

- name: genny_auto_tasks
  priority: 5
  commands:
  - func: f_git_get_project
  - command: expansions.write
    params:
      file: ${workdir}/expansions.yml
  - command: shell.exec
    params:
      working_dir: ${workdir}
      script: ${workdir}/src/genny/run-genny auto-tasks
  - command: generate.tasks
    params:
      files:
        - ${workdir}/run/build/Tasks/Tasks.json

- name: genny_patch_tasks
  patch_only: true
  priority: 5
  commands:
  - func: f_git_get_project
  - command: expansions.write
    params:
      file: ${workdir}/expansions.yml
  - command: shell.exec
    params:
      working_dir: ${workdir}
      # add --forced-workloads to run specific workloads in addition, i.e. adding the following to the end of the command below:
      # --forced-workloads scale/BigUpdate.yml execution/CreateIndex.yml
      # will run all locally added/modified workloads, plus big_update and create_index
      script: ${workdir}/src/genny/scripts/run-genny patch-tasks
  - command: generate.tasks
    params:
      files:
        - ${workdir}/run/build/Tasks/Tasks.json

#######################################
#               Modules               #
#######################################
# if a module is added and to be added to the manifest
# be sure to add the module to git.get_project revisions parameter
modules:
- name: dsi
  repo: git@github.com:10gen/dsi.git
  prefix: ..
  branch: master

- name: genny
  repo: git@github.com:mongodb/genny.git
  prefix: ..
  branch: master

- name: workloads
  repo: git@github.com:10gen/workloads.git
  prefix: ..
  branch: master

- name: wtdevelop
  repo: git@github.com:wiredtiger/wiredtiger.git
  prefix: src/third_party
  branch: develop

- name: linkbench
  repo: git@github.com:10gen/linkbench.git
  prefix: ..
  branch: master

- name: enterprise
  repo: git@github.com:10gen/mongo-enterprise-modules.git
  prefix: src/mongo/db/modules
  branch: master

- name: mongo-tools
  repo: git@github.com:mongodb/mongo-tools.git
  prefix: mongo-tools/src/github.com/mongodb
  branch: master

#######################################
#         Buildvariants               #
#######################################
buildvariants:

# We are explicitly tracking the Amazon Linux 2 variant compile options from etc/evergreen.yml.  If we can get
# proper artifacts directly from that project, we should do that and remove these tasks.
- &compile-amazon2
  name: compile-amazon2
  display_name: Compile
  modules:
    - mongo-tools
    - enterprise
    - genny
  batchtime: 1440 # 24 hours
  expansions: &compile-expansions
    tooltags: ""
    use_scons_cache: true
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=amazon2
      -j$(grep -c ^processor /proc/cpuinfo)
      --release
      --variables-files=etc/scons/mongodbtoolchain_v3_gcc.vars
      install-mongocryptd
  run_on:
      - "amazon2-build"
  tasks:
    - name: compile
    - name: genny_generate_all_tasks

- <<: *compile-amazon2
  name: wtdevelop-compile-amazon2
  display_name: WT Develop Compile
  modules:
  - mongo-tools
  - wtdevelop
  - enterprise
  - genny # needed for genny_generate_all_tasks
  expansions:
    <<: *compile-expansions
    compile-variant: -wtdevelop
  tasks:
    - name: compile

- name: compile-rhel70
  display_name: Compile for Atlas-like
  modules:
  - mongo-tools
  - enterprise
  batchtime: 1440 # 24 hours
  expansions:
    <<: *compile-expansions
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=rhel70
      -j$(grep -c ^processor /proc/cpuinfo)
      --release
      --variables-files=etc/scons/mongodbtoolchain_v3_gcc.vars
    compile-variant: -rhel70
  run_on:
  - rhel70-small
  tasks:
  - name: compile

#######################################
#         Linux Buildvariants         #
#######################################
- name: linux-1-node-replSet
  display_name: Linux 1-Node ReplSet
  batchtime: 10080 # 7 days
  modules: &modules
    - dsi
    - genny
    - workloads
    - linkbench
  expansions:
    mongodb_setup: single-replica
    infrastructure_provisioning: single
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-single"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks: &1nodetasks
    - name: industry_benchmarks
    - name: ycsb_60GB
    - name: crud_workloads
    - name: mixed_workloads
    - name: misc_workloads
    - name: map_reduce_workloads
    - name: smoke_test
    - name: retryable_writes_workloads
    - name: non_sharded_workloads
    - name: bestbuy_agg
    - name: bestbuy_agg_merge_different_db
    - name: bestbuy_agg_merge_same_db
    - name: bestbuy_agg_merge_wordcount
    - name: bestbuy_query
    - name: change_streams_throughput
    - name: change_streams_latency
    - name: snapshot_reads
    - name: linkbench
    - name: tpcc
    - name: genny_patch_tasks
    - name: genny_auto_tasks
    - name: industry_benchmarks_wmajority
    - name: sb_large_scale
    - name: sb_timeseries

- name: linux-standalone
  display_name: Linux Standalone
  batchtime: 2880  # 48 hours
  modules: *modules
  expansions:
    mongodb_setup: standalone
    infrastructure_provisioning: single
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-single"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks: &standalonetasks
    - name: industry_benchmarks
    - name: ycsb_60GB
    - name: crud_workloads
    - name: genny_canaries
    - name: cursor_manager
    - name: mixed_workloads
    - name: misc_workloads
    - name: map_reduce_workloads
    - name: smoke_test
    - name: non_sharded_workloads
    - name: bestbuy_agg
    - name: bestbuy_agg_merge_different_db
    - name: bestbuy_agg_merge_same_db
    - name: bestbuy_agg_merge_wordcount
    - name: bestbuy_query
    - name: genny_patch_tasks
    - name: genny_auto_tasks

- name: linux-standalone-audit
  display_name: Linux Standalone Audit
  batchtime: 10080 # 7 days
  modules: *modules
  expansions:
    mongodb_setup: standalone-audit
    infrastructure_provisioning: single
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-single"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks:
    - name: industry_benchmarks
    - name: crud_workloads
    - name: smoke_test
    - name: genny_patch_tasks
    - name: genny_auto_tasks

- name: linux-1-node-replSet-fle
  display_name: Linux 1-Node ReplSet FLE
  batchtime: 2880  # 48 hours
  modules: *modules
  expansions:
    mongodb_setup: single-replica-fle
    infrastructure_provisioning: single
    authentication: enabled
    fle: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-single"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks:
    - name: industry_benchmarks
    - name: linkbench
    - name: genny_patch_tasks
    - name: genny_auto_tasks

- name: linux-1-node-replSet-cwrwc
  display_name: Linux 1-Node ReplSet CWRWC
  batchtime: 2880  # 48 hours
  modules: *modules
  expansions:
    mongodb_setup: single-replica-cwrwc
    infrastructure_provisioning: single
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-single"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks:
    - name: industry_benchmarks
    - name: linkbench
    - name: genny_patch_tasks
    - name: genny_auto_tasks

- name: linux-1-node-replSet-ese-cbc
  display_name: Linux 1-Node ReplSet ESE CBC
  batchtime: 2880  # 48 hours
  modules: *modules
  expansions:
    mongodb_setup: single-replica-ese-cbc
    infrastructure_provisioning: single
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-single"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks:
    - name: industry_benchmarks
    - name: smoke_test
    - name: genny_patch_tasks
    - name: genny_auto_tasks
    - name: ycsb_60GB

- name: linux-1-node-replSet-ese-gcm
  display_name: Linux 1-Node ReplSet ESE GCM
  batchtime: 2880  # 48 hours
  modules: *modules
  expansions:
    mongodb_setup: single-replica-ese-gcm
    infrastructure_provisioning: single
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-single"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks:
    - name: industry_benchmarks
    - name: smoke_test
    - name: genny_patch_tasks
    - name: genny_auto_tasks
    - name: ycsb_60GB

- name: linux-1-node-15gbwtcache
  display_name: Linux 1-Node ReplSet 15 GB WiredTiger Cache
  batchtime: 2880  # 48 hours
  modules: *modules
  expansions:
    mongodb_setup: single-replica-15gbwtcache
    infrastructure_provisioning: replica
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-single"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks:
    - name: industry_benchmarks
    - name: smoke_test
    - name: genny_patch_tasks
    - name: genny_auto_tasks

- name: linux-3-shard
  display_name: Linux 3-Shard Cluster
  batchtime: 10080 # 7 days
  modules: *modules
  expansions:
    mongodb_setup: shard
    infrastructure_provisioning: shard
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-shard"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks:
    - name: industry_benchmarks
    - name: crud_workloads
    - name: mixed_workloads
    - name: misc_workloads
    - name: map_reduce_workloads
    - name: smoke_test
    - name: industry_benchmarks_wmajority
    - name: mongos_workloads
    - name: mongos_large_catalog_workloads
    - name: change_streams_throughput
    - name: change_streams_latency
    - name: change_streams_multi_mongos
    - name: genny_patch_tasks
    - name: genny_auto_tasks

- name: linux-shard-lite
  display_name: Linux Shard Lite Cluster
  batchtime: 2880  # 48 hours
  modules: *modules
  expansions:
    mongodb_setup: shard-lite
    infrastructure_provisioning: shard-lite
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-shard-lite"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks: &shardlitetasks
    - name: bestbuy_agg
    - name: bestbuy_agg_merge_different_db
    - name: bestbuy_agg_merge_same_db
    - name: bestbuy_agg_merge_target_hashed
    - name: bestbuy_agg_merge_wordcount
    - name: bestbuy_query
    - name: change_streams_latency
    - name: change_streams_throughput
    - name: industry_benchmarks
    - name: industry_benchmarks_wmajority
    - name: linkbench
    - name: mixed_workloads
    - name: mongos_workloads
    - name: mongos_large_catalog_workloads
    - name: move_chunk_workloads
    - name: move_chunk_waiting_workloads
    - name: retryable_writes_workloads
    - name: smoke_test
    - name: genny_patch_tasks
    - name: genny_auto_tasks

- name: linux-shard-lite-cwrwc
  display_name: Linux Shard Lite Cluster CWRWC
  batchtime: 10080 # 7 days
  modules: *modules
  expansions:
    mongodb_setup: shard-lite-cwrwc
    infrastructure_provisioning: shard-lite
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-shard-lite"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks:
    - name: industry_benchmarks
    - name: linkbench
    - name: genny_patch_tasks
    - name: genny_auto_tasks


- name: linux-3-node-replSet
  display_name: Linux 3-Node ReplSet
  batchtime: 2880  # 48 hours
  modules: *modules
  expansions:
    mongodb_setup: replica
    infrastructure_provisioning: replica
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-replset"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks: &3nodetasks
    - name: industry_benchmarks
    - name: ycsb_60GB
    - name: industry_benchmarks_secondary_reads
    - name: crud_workloads
    - name: crud_workloads_majority
    - name: mixed_workloads
    - name: misc_workloads
    - name: map_reduce_workloads
    - name: refine_shard_key_transaction_stress
    - name: smoke_test
    - name: retryable_writes_workloads
    - name: industry_benchmarks_wmajority
    - name: secondary_performance # Uses a special 2 node mongodb setup
    - name: non_sharded_workloads
    - name: bestbuy_agg
    - name: bestbuy_agg_merge_different_db
    - name: bestbuy_agg_merge_same_db
    - name: bestbuy_agg_merge_wordcount
    - name: bestbuy_query
    - name: change_streams_throughput
    - name: change_streams_latency
    - name: snapshot_reads
    - name: secondary_reads
    - name: tpcc
    - name: linkbench
    - name: genny_patch_tasks
    - name: genny_auto_tasks
    - name: sb_large_scale
    - name: sb_timeseries

- name: linux-3-node-replSet-noflowcontrol
  display_name: Linux 3-Node ReplSet (Flow Control off)
  batchtime: 10080  # 7 days
  modules: *modules
  expansions:
    mongodb_setup: replica-noflowcontrol
    infrastructure_provisioning: replica
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-replset"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks:
    - name: industry_benchmarks
    - name: industry_benchmarks_secondary_reads
    - name: crud_workloads
    - name: crud_workloads_majority
    - name: mixed_workloads
    - name: smoke_test
    - name: industry_benchmarks_wmajority
    - name: change_streams_throughput
    - name: change_streams_latency
    - name: tpcc
    - name: linkbench
    - name: genny_patch_tasks
    - name: genny_auto_tasks

- name: linux-3-node-replSet-ssl
  display_name: Linux 3-Node ReplSet (SSL)
  batchtime: 10080 # 7 days
  modules: *modules
  expansions:
    mongodb_setup: replica-ssl
    infrastructure_provisioning: replica
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-replset"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks:
    - name: industry_benchmarks
    - name: mixed_workloads
    - name: genny_patch_tasks
    - name: genny_auto_tasks

- name: linux-3-node-replSet-initialsync
  display_name: Linux 3-Node ReplSet Initial Sync
  batchtime: 2880  # 48 hours
  modules: *modules
  expansions:
    mongodb_setup: replica-2node
    infrastructure_provisioning: replica
    authentication: disabled
    storageEngine: wiredTiger
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  run_on:
      - "rhel70-perf-replset"
  tasks:
    - name: initialsync
    - name: initialsync-logkeeper-short
    - name: initialsync-large
    - name: genny_patch_tasks
    - name: genny_auto_tasks

- name: linux-replSet-initialsync-logkeeper
  display_name: Linux ReplSet Initial Sync LogKeeper
  batchtime: 10080 # 7 days
  modules: *modules
  expansions:
    mongodb_setup: initialsync-logkeeper
    infrastructure_provisioning: initialsync-logkeeper
    # EBS logkeeper snapshot with FCV set to 4.4
    snapshotId: snap-0b0b8b2ad16e8f14e
    authentication: disabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-initialsync-logkeeper"
  depends_on:
      - name: compile
        variant: compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks:
    - name: initialsync-logkeeper
    - name: genny_patch_tasks
    - name: genny_auto_tasks

#######################################
#  Atlas Like Buildvariants           #
#######################################
- name: atlas-like-M60
  display_name: M60-Like 3-Node ReplSet
  batchtime: 2880  # 48 hours
  modules: *modules
  expansions:
    mongodb_setup: atlas-like-replica
    infrastructure_provisioning: M60-like-replica
    authentication: enabled
    storageEngine: wiredTiger
    compile-variant: -rhel70
  run_on:
      - "rhel70-perf-M60-like"
  depends_on:
      - name: compile
        variant: compile-rhel70
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks:  # Cannot use *3nodetasks because secondary_performance uses a special mongodb setup.
    - name: industry_benchmarks
    - name: ycsb_60GB
    - name: industry_benchmarks_secondary_reads
    - name: crud_workloads
    - name: crud_workloads_majority
    - name: mixed_workloads
    - name: misc_workloads
    - name: map_reduce_workloads
    - name: smoke_test
    - name: retryable_writes_workloads
    - name: industry_benchmarks_wmajority
    - name: non_sharded_workloads
    - name: bestbuy_agg
    - name: bestbuy_agg_merge_different_db
    - name: bestbuy_agg_merge_same_db
    - name: bestbuy_agg_merge_wordcount
    - name: bestbuy_query
    - name: change_streams_throughput
    - name: change_streams_latency
    - name: snapshot_reads
    - name: secondary_reads
    - name: linkbench
    - name: genny_patch_tasks
    - name: genny_auto_tasks


#######################################
#  WT Develop Linux Buildvariants     #
#######################################
- name: wtdevelop-1-node-replSet
  display_name: WT Develop 1-Node ReplSet
  batchtime: 2880  # 48 hours
  modules: *modules
  expansions:
    mongodb_setup: single-replica
    infrastructure_provisioning: single
    compile-variant: -wtdevelop
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-single"
  depends_on:
      - name: compile
        variant: wtdevelop-compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks: *1nodetasks

- name: wtdevelop-standalone
  display_name: WT Develop Standalone
  batchtime: 2880  # 48 hours
  modules: *modules
  expansions:
    mongodb_setup: standalone
    infrastructure_provisioning: single
    compile-variant: -wtdevelop
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-single"
  depends_on:
      - name: compile
        variant: wtdevelop-compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks: *standalonetasks

- name: wtdevelop-3-node-replSet
  display_name: WT Develop 3-Node ReplSet
  batchtime: 10080 # 7 days
  modules: *modules
  expansions:
    mongodb_setup: replica
    infrastructure_provisioning: replica
    compile-variant: -wtdevelop
    authentication: enabled
    storageEngine: wiredTiger
  run_on:
      - "rhel70-perf-replset"
  depends_on:
      - name: compile
        variant: wtdevelop-compile-amazon2
      - name: genny_generate_all_tasks
        variant: compile-amazon2
  tasks: *3nodetasks
